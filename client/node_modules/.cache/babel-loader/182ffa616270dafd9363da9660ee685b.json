{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\OpenServer\\\\domains\\\\rebuildTCN\\\\client\\\\src\\\\pages\\\\RegistarationPage.js\";\nimport React, { useState } from 'react';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nexport const RegistarationPage = () => {\n  const {\n    loading,\n    error,\n    request\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    name: '',\n    telegram: ''\n  });\n  const [validated, setValidated] = useState(false);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', { ...form\n      });\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"\\u0415\\u0441\\u043B\\u0438 \\u0443 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\\"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\\"\"), /*#__PURE__*/React.createElement(Form, {\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    required: true,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 email \", error)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    required: true,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u0431\\u043E\\u043B\\u0435\\u0435 3 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"\\u0418\\u043C\\u044F\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n    required: true,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"\\u041D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"telegram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0433\\u0440\\u0430\\u043C\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"telegram\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0442\\u0435\\u043B\\u0435\\u0433\\u0440\\u0430\\u043C ID(\\u043D\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435)\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    href: \"/authenticated\",\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: 15\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    disabled: loading,\n    onClick: registerHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"))));\n};","map":{"version":3,"sources":["D:/Program Files/OpenServer/domains/rebuildTCN/client/src/pages/RegistarationPage.js"],"names":["React","useState","useHttp","Button","Card","Form","RegistarationPage","loading","error","request","form","setForm","email","password","name","telegram","validated","setValidated","changeHandler","event","target","value","handleSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","registerHandler","data","e","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA4BP,OAAO,EAAzC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,KAAK,EAAE,EADsB;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AACJC,IAAAA,IAAI,EAAE,EADF;AACMC,IAAAA,QAAQ,EAAE;AADhB,GAAD,CAAhC;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMiB,aAAa,GAAGC,KAAK,IAAI;AAC3BR,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACS,KAAK,CAACC,MAAN,CAAaN,IAAd,GAAqBK,KAAK,CAACC,MAAN,CAAaC;AAA5C,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5B,UAAMT,IAAI,GAAGS,KAAK,CAACI,aAAnB;;AACA,QAAIb,IAAI,CAACc,aAAL,OAAyB,KAA7B,EAAoC;AAChCL,MAAAA,KAAK,CAACM,cAAN;AACAN,MAAAA,KAAK,CAACO,eAAN;AACH;;AACDT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAPD;;AASA,QAAMU,eAAe,GAAG,YAAY;AAChC,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMnB,OAAO,CAAC,oBAAD,EAAuB,MAAvB,EAA+B,EAAC,GAAGC;AAAJ,OAA/B,CAA1B;AACH,KAFD,CAEE,OAAOmB,CAAP,EAAU,CACX;AACJ,GALD;;AAOA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2QADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEb,SAAjB;AAA4B,IAAA,QAAQ,EAAEM,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,kDAHhB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,QAAQ,EAAEJ,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAC8BV,KAD9B,CATJ,CADJ,eAcI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,iFAHhB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,QAAQ,EAAEU,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4LATJ,CAdJ,eA2BI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,+DAHhB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,QAAQ,EAAEA,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHATJ,CA3BJ,eAwCI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,mOAHhB;AAII,IAAA,QAAQ,EAAEA,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxCJ,eAiDI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,gBADT;AAEI,IAAA,OAAO,EAAC,SAFZ;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,KAAK,EAAE;AAACY,MAAAA,WAAW,EAAE;AAAd,KAJX;AAKI,IAAA,QAAQ,EAAEvB,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAjDJ,eA2DI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,QAAQ,EAAEA,OAFd;AAGI,IAAA,OAAO,EAAEoB,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EA3DJ,CAFJ,CAFJ,CADJ;AA2EH,CAtGM","sourcesContent":["import React, {useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\n\r\nexport const RegistarationPage = () => {\r\n    const {loading, error, request} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: '', name: '', telegram: ''\r\n    })\r\n    const [validated, setValidated] = useState(false)\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header as=\"h3\">Форма регистрации</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>Если у вас уже ест аккаунт нажмите \"Войти в аккаунт\"</Card.Text>\r\n                <Form validated={validated} onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Введите email\"\r\n                            required\r\n                            onChange={changeHandler}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Введите корректный email {error}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Введите пароль\"\r\n                            required\r\n                            onChange={changeHandler}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Пароль должен быть более 3 символов\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Имя</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Введите имя\"\r\n                            required\r\n                            onChange={changeHandler}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Не должно быть пустым\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"telegram\">\r\n                        <Form.Label>Телеграм</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"telegram\"\r\n                            placeholder=\"Введите ваш телеграм ID(не обязательное поле)\"\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button\r\n                        href=\"/authenticated\"\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        style={{marginRight: 15}}\r\n                        disabled={loading}\r\n                    >\r\n                        Войти в аккаунт\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        disabled={loading}\r\n                        onClick={registerHandler}\r\n                    >\r\n                        Регистрация\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}