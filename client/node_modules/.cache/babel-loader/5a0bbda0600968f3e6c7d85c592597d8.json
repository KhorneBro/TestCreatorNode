{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\OpenServer\\\\domains\\\\rebuildTCN\\\\client\\\\src\\\\pages\\\\AuthPage.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useMessage } from \"../hooks/message.hooks\";\nimport { AuthContext } from \"../context/authContext\";\nimport NavLink from \"react-router-dom/modules/NavLink\";\nexport const AuthPage = () => {\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const {\n    loading,\n    error,\n    request,\n    clearError\n  } = useHttp();\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form\n      });\n      auth.login(data.token, data.userId);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\u0424\\u043E\\u0440\\u043C\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    required: true,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    required: true,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: 15\n    },\n    disabled: loading,\n    onClick: loginHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"))));\n};","map":{"version":3,"sources":["D:/Program Files/OpenServer/domains/rebuildTCN/client/src/pages/AuthPage.js"],"names":["React","useContext","useEffect","useState","useHttp","Button","Card","Form","useMessage","AuthContext","NavLink","AuthPage","auth","message","loading","error","request","clearError","form","setForm","email","password","name","changeHandler","event","target","value","loginHandler","data","login","token","userId","e","marginRight"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport {useMessage} from \"../hooks/message.hooks\";\r\nimport {AuthContext} from \"../context/authContext\";\r\nimport NavLink from \"react-router-dom/modules/NavLink\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading, error, request, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: '', name: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header as=\"h3\">Форма регистрации</Card.Header>\r\n            <Card.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Введите email\"\r\n                            required\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Введите пароль\"\r\n                            required\r\n                            onChange={changeHandler}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"submit\"\r\n                        style={{marginRight: 15}}\r\n                        disabled={loading}\r\n                        onClick={loginHandler}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    variant=\"dark\"*/}\r\n                    {/*    disabled={loading}*/}\r\n                    {/*    onClick={registerHandler}*/}\r\n                    {/*>*/}\r\n                    {/*    Регистрация*/}\r\n                    {/*</Button>*/}\r\n                    <NavLink to=\"/registration\">\r\n                        Регистрация\r\n                    </NavLink>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}